---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: coder-server
  namespace: fission
  labels:
    app: coder-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: coder-server
  template:
    metadata:
      labels:
        app: coder-server
    spec:
      containers:
      - name: coder-server
        image: codercom/code-server:latest
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: PASSWORD
          value: "coder"
        - name: SHELL
          value: "/bin/bash"
        volumeMounts:
        - name: workspace
          mountPath: /home/coder/workspace
        - name: functions
          mountPath: /home/coder/functions
        # Install Fission CLI and other tools
        command: ["/bin/bash"]
        args:
        - -c
        - |
          # Install Fission CLI
          curl -Lo fission https://github.com/fission/fission/releases/download/v1.20.5/fission-v1.20.5-linux-amd64
          chmod +x fission
          sudo mv fission /usr/local/bin/
          
          # Install kubectl if not present
          if ! command -v kubectl &> /dev/null; then
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
          fi
          
          # Install Node.js and npm for function development
          curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          
          # Install Python and pip
          sudo apt-get update && sudo apt-get install -y python3 python3-pip
          
          # Create workspace directories
          mkdir -p /home/coder/workspace/functions
          mkdir -p /home/coder/workspace/examples
          
          # Start code-server
          exec /usr/bin/entrypoint.sh --bind-addr 0.0.0.0:8080 --auth password /home/coder/workspace
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
      volumes:
      - name: workspace
        emptyDir: {}
      - name: functions
        hostPath:
          path: /functions
          type: DirectoryOrCreate
      serviceAccountName: coder-server
      securityContext:
        fsGroup: 1000

---
apiVersion: v1
kind: Service
metadata:
  name: coder-server
  namespace: fission
  labels:
    app: coder-server
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 31315
    protocol: TCP
    name: http
  selector:
    app: coder-server

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coder-server
  namespace: fission

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: coder-server
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apps"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["fission.io"]
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["extensions"]
  resources: ["*"]
  verbs: ["*"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: coder-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: coder-server
subjects:
- kind: ServiceAccount
  name: coder-server
  namespace: fission 